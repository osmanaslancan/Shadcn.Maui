<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:Shadcn.Maui.Controls"
             xmlns:localres="clr-namespace:Shadcn.Maui.Resources;assembly=Shadcn.Maui"
             xmlns:behaviors="clr-namespace:Shadcn.Maui.Behaviors;assembly=Shadcn.Maui"
             xmlns:core="clr-namespace:Shadcn.Maui.Core"
             x:Class="Shadcn.Maui.Resources.StyleResource">
    <ResourceDictionary.MergedDictionaries>
        <localres:Colors/>
        <ResourceDictionary>
            <Style TargetType="ShellContent">
                <Setter Property="NavigationPage.HasNavigationBar" Value="False"/>
            </Style>
            <Style TargetType="ScrollView">
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource DarkBackground}}"/>
            </Style>
            <Style TargetType="Entry">
                <Setter Property="behaviors:EntryExtensionsBehavior.HasUnderLine" Value="False"/>
            </Style>
            <Style TargetType="local:SButton">
                <Style.Triggers>
                    <Trigger TargetType="local:SButton" Property="Variant" Value="Primary">
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource DarkPrimary}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForeground}, Dark={StaticResource DarkPrimaryForeground}}" />
                    </Trigger>
                    <MultiTrigger TargetType="local:SButton" >
                        <MultiTrigger.Conditions>
                            <PropertyCondition Property="IsHovering" Value="True"/>
                            <PropertyCondition Property="Variant" Value="Primary" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary90}, Dark={StaticResource DarkPrimary90}}" />
                    </MultiTrigger>
                    <Trigger TargetType="local:SButton" Property="Variant" Value="Secondary">
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource DarkSecondary}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SecondaryForeground}, Dark={StaticResource DarkSecondaryForeground}}" />
                    </Trigger>
                    <MultiTrigger TargetType="local:SButton" >
                        <MultiTrigger.Conditions>
                            <PropertyCondition Property="IsHovering" Value="True"/>
                            <PropertyCondition Property="Variant" Value="Secondary" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Secondary80}, Dark={StaticResource DarkSecondary80}}" />
                    </MultiTrigger>
                    <Trigger TargetType="local:SButton" Property="Variant" Value="Destructive">
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Destructive}, Dark={StaticResource DarkDestructive}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DestructiveForeground}, Dark={StaticResource DarkDestructiveForeground}}" />
                    </Trigger>
                    <MultiTrigger TargetType="local:SButton" >
                        <MultiTrigger.Conditions>
                            <PropertyCondition Property="IsHovering" Value="True"/>
                            <PropertyCondition Property="Variant" Value="Destructive" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Destructive90}, Dark={StaticResource DarkDestructive90}}" />
                    </MultiTrigger>
                    <Trigger TargetType="local:SButton" Property="Variant" Value="Outline">
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource DarkBackground}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource DarkPrimary}}" />
                    </Trigger>
                    <MultiTrigger TargetType="local:SButton" >
                        <MultiTrigger.Conditions>
                            <PropertyCondition Property="IsHovering" Value="True"/>
                            <PropertyCondition Property="Variant" Value="Outline" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Accent}, Dark={StaticResource DarkAccent}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource AccentForeground}, Dark={StaticResource DarkAccentForeground}}" />
                    </MultiTrigger>
                    <Trigger TargetType="local:SButton" Property="Variant" Value="Ghost">
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=Transparent, Dark=Transparent}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource DarkPrimary}}" />
                        <Setter Property="BorderWidth" Value="0"/>
                    </Trigger>
                    <MultiTrigger TargetType="local:SButton" >
                        <MultiTrigger.Conditions>
                            <PropertyCondition Property="IsHovering" Value="True"/>
                            <PropertyCondition Property="Variant" Value="Ghost" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Accent}, Dark={StaticResource DarkAccent}}" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource AccentForeground}, Dark={StaticResource DarkAccentForeground}}" />
                    </MultiTrigger>
                </Style.Triggers>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <Setter.Value>
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"></VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="IsHovering" Value="True" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter.Value>
                </Setter>
                <Setter Property="behaviors:CursorPointerBehavior.CursorPointer" Value="True" />
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="GeistMedium"/>
            </Style>
            <Style TargetType="{x:Type Label}" ApplyToDerivedTypes="true">
                <Style.Behaviors>
                    <behaviors:SmartStyleBehavior Selector="SCardTitle Label">
                        <Style TargetType="Label">
                            <Setter Property="FontSize" Value="24"/>
                            <Setter Property="LineHeight" Value="1"/>
                            <Setter Property="CharacterSpacing" Value="-0.4" />
                            <Setter Property="FontFamily" Value="GeistSemiBold"/>
                        </Style>
                    </behaviors:SmartStyleBehavior>
                    <behaviors:SmartStyleBehavior Selector="SCardDescription Label">
                        <Style TargetType="Label">
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource MutedForeground}, Dark={StaticResource DarkMutedForeground}}" />
                        </Style>
                    </behaviors:SmartStyleBehavior>
                </Style.Behaviors>
            </Style>
            <Style TargetType="local:SLabel">
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource DarkPrimary}}" />
            </Style>
            <Style TargetType="local:SCardHeader">
                <Setter Property="Direction" Value="Column"/>
                <Setter Property="Margin" Value="24" />
            </Style>
            <Style TargetType="local:SCardFooter">
                <Setter Property="Margin" Value="24,0,24,24" />
            </Style>
            <Style Class="SCard.Border" TargetType="Border">
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Card}, Dark={StaticResource DarkCard}}"/>
                <Setter Property="StrokeThickness" Value="0.5"/>
                <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Border}, Dark={StaticResource DarkBorder}}"/>
                <Setter Property="StrokeShape">
                    <RoundRectangle CornerRadius="6"/>
                </Setter>
                <Setter Property="Shadow">
                    <Shadow Offset="0, 0" Brush="#000000" Opacity=".1" Radius="1"/>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>